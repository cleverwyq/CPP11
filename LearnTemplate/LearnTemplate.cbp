<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="LearnTemplate" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/LearnTemplate" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-std=c++11 -fno-elide-constructors" />
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="Release">
				<Option output="bin/Release/LearnTemplate" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-fexceptions" />
		</Compiler>
		<Unit filename="conditional.cpp">
			<Option target="Release" />
		</Unit>
		<Unit filename="cons.cpp">
			<Option target="Release" />
		</Unit>
		<Unit filename="list.cpp">
			<Option target="Release" />
		</Unit>
		<Unit filename="operator.cpp">
			<Option target="Release" />
		</Unit>
		<Unit filename="self write/my_int_const.cpp">
			<Option target="Release" />
		</Unit>
		<Unit filename="self write/my_is_function.cpp">
			<Option target="Release" />
		</Unit>
		<Unit filename="self write/my_is_void.cpp">
			<Option target="Release" />
		</Unit>
		<Unit filename="self write/my_template_func_of_template_class.cpp" />
		<Unit filename="vector.cpp">
			<Option target="Release" />
		</Unit>
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
